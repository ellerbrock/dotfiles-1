## NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.

# open terminal, blazingly fast compared to iTerm/Hyper
alt - return : osascript -e 'tell application "iTerm" to create window with default profile'

# close focused window
shift + alt - q : chunkc tiling::window --close

# focus window
alt - j : chunkc tiling::window --focus west
alt - k : chunkc tiling::window --focus south
alt - l : chunkc tiling::window --focus north
alt - 0x29 : chunkc tiling::window --focus east

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize

# move window
shift + alt - j : chunkc tiling::window --warp west
shift + alt - k : chunkc tiling::window --warp south
shift + alt - l : chunkc tiling::window --warp north
shift + alt - 0x29 : chunkc tiling::window --warp east

# send window to desktop
shift + alt - 1 : chunkc tiling::window --send-to-desktop 1
shift + alt - 2 : chunkc tiling::window --send-to-desktop 2
shift + alt - 3 : chunkc tiling::window --send-to-desktop 3
shift + alt - 4 : chunkc tiling::window --send-to-desktop 4
shift + alt - 5 : chunkc tiling::window --send-to-desktop 5
shift + alt - 6 : chunkc tiling::window --send-to-desktop 6

# focus monitor
ctrl + alt - 1  : chunkc tiling::monitor -f 1
ctrl + alt - 2  : chunkc tiling::monitor -f 2
ctrl + alt - 3  : chunkc tiling::monitor -f 3

# set insertion point for focused container
ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
ctrl + alt - h : chunkc tiling::window --use-insertion-point west
ctrl + alt - j : chunkc tiling::window --use-insertion-point south
ctrl + alt - k : chunkc tiling::window --use-insertion-point north
ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window split type
alt - e : chunkc tiling::window --toggle split

# float / unfloat window
shift + alt - space : chunkc tiling::window --toggle float

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp
ctrl + alt - s : chunkc tiling::desktop --layout monocle
ctrl + alt - d : chunkc tiling::desktop --layout float

ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1
